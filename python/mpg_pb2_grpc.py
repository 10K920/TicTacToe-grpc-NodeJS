# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mpg_pb2 as mpg__pb2


class TicTacToeStub(object):
    """Simple grpc Tic-Tac-Toe
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PlayTurn = channel.unary_unary(
                '/mpg.TicTacToe/PlayTurn',
                request_serializer=mpg__pb2.SendMyMove.SerializeToString,
                response_deserializer=mpg__pb2.SendOpponentMove.FromString,
                )


class TicTacToeServicer(object):
    """Simple grpc Tic-Tac-Toe
    """

    def PlayTurn(self, request, context):
        """Sends player's move
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicTacToeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PlayTurn': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayTurn,
                    request_deserializer=mpg__pb2.SendMyMove.FromString,
                    response_serializer=mpg__pb2.SendOpponentMove.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mpg.TicTacToe', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TicTacToe(object):
    """Simple grpc Tic-Tac-Toe
    """

    @staticmethod
    def PlayTurn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpg.TicTacToe/PlayTurn',
            mpg__pb2.SendMyMove.SerializeToString,
            mpg__pb2.SendOpponentMove.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
